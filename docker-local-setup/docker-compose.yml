version: '3'

services:
  product-service:
    build: 
      context: ../product-service
      dockerfile: Dockerfile
    image: product-service
    environment:
      - MONGODB_URL=${PRODUCT_SERVICE_MONGODB_URL}
      - RABBITMQ_SERVER=${RABBITMQ_SERVER}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    ports:
      - '${PRODUCT_SERVICE_PORT}:3000'
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - .:/usr/app/product-service
    networks:
      - node-network

  tracking-service:
    build: 
      context: ../tracking-service
      dockerfile: Dockerfile
    image: tracking-service
    environment:
      - NODE_ENV=production
      - MONGODB_URL=${TRACKING_SERVICE_MONGODB_URL}
      - RABBITMQ_SERVER=${RABBITMQ_SERVER}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    ports:
      - '${TRACKING_SERVICE_PORT}:3030'
    depends_on:
      - mongodb
      - rabbitmq
      - product-service
    volumes:
      - .:/usr/app/tracking-service
    networks:
      - node-network

  rabbitmq:
    image: rabbitmq:3.8.27-management-alpine
    container_name: 'rabbitmq'
    hostname: "rabbitmq.internal.io"
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - node-network
        
  mongodb:
    image: mongo:4.2.1-bionic
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
    networks:
      - node-network

volumes:
  dbdata:

networks:
  node-network:
    driver: bridge

version: '3'

services:
  product-service:
    build: 
      context: ../product-service
      dockerfile: Dockerfile
    image: product-service
    environment:
      - MONGODB_URL=${PRODUCT_SERVICE_MONGODB_URL}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
    ports:
      - '${PRODUCT_SERVICE_PORT}:3000'
    depends_on:
      - mongodb
      - kafka
    volumes:
      - .:/usr/app/product-service
    networks:
      - node-network

# tracking-service:
#   build: ../tracking-service
#   image: tracking-service
#   environment:
#     - MONGODB_URL=${TRACKING_SERVICE_MONGODB_URL}
#   ports:
#     - '${TRACKING_SERVICE_PORT}:3000'
#   depends_on:
#     - mongodb
#     - product-service
#     # - kafka
#   volumes:
#     - .:/usr/src/tracking-service
#   networks:
#     - node-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - node-network
        
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    hostname: 'kafka-internal.io'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-internal.io
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - node-network

  mongodb:
    image: mongo:4.2.1-bionic
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
    networks:
      - node-network

volumes:
  dbdata:

networks:
  node-network:
    driver: bridge
